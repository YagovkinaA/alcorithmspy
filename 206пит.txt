import math
from cmath import sqrt
with open("INPUT.txt", "r") as fin:
   with open ('OUTPUT.txt', 'w') as fr: 
   
    inf = 10 ** 9
    a = []
    b = []
    c = []
    d = []
    line = fin.readline().split()
    n, f = int(line[0]), int(line[1])
    line = fin.readline().split()
    m = int(line[0])
 
    for i in range(m):
        line = fin.readline().split()
        tmp = int(line[0])
        if tmp % 2 == 0:
            do = (tmp * 2) - 2
        else:
            do = (tmp * 2) - 2
        if int(line[0]) > 2:
            for j in range(1, do, 2):
                a.append(int(line[j]))
                b.append(int(line[j+1]))
                c.append(int(line[j+2]))
                d.append(int(line[j+3]))
        if int(line[0]) == 2:
            a.append(int(line[1]))
            b.append(int(line[2]))
            c.append(int(line[3]))
            d.append(int(line[4]))
 
  
 
    pribitie = []
    for i in range(n):
        pribitie.append(inf)
    s = len(a)
 
    pribitie[0] = 0
    for i in range(n-1):
        for j in range(s):
            if pribitie[c[j] - 1] > d[j] and pribitie[a[j] - 1] != inf and b[j] >= pribitie[a[j] - 1]:
                pribitie[c[j] - 1] = d[j]
 
    for i in range(n):
        if pribitie[i] == inf:
            pribitie[i] = 0
 

 
    for i in range(n):
        if pribitie[i] == 0:
            pribitie[i] = -1
            pribitie[0] = 0
    
 
    ans = pribitie[f-1]

 
    fr.write(str(ans) + "\n")
